
.flip-card {
  width: var(--defaltBoxSizeW);
  height: var(--defaltBoxSizeV);
  background-color: transparent;
  perspective: 1000px;
  
}

.flip-card-inner {
  position: relative;
  text-align: center;
  transition: transform 0.6s;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
}

.flip-card:hover .flip-card-inner {
  transform: rotateY(180deg);
}

.flip-card-front, .flip-card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

.flip-card-front {
  width: 100%;
  height: 100%;
  background-image: linear-gradient(60deg,var(--color1), var(--color5));
}

.flip-card-front img {
  width: 100%;
  border-radius: var(--sectionBorderRadius);
}

.flip-card-back {
  width: 100%;
  border-radius: var(--sectionBorderRadius);
  background-image: linear-gradient(60deg,var(--color1), var(--color5));
  color: var(--fontColor);
  transform: rotateY(180deg);
}

.flip-card-back img {
  width: 100%;
  border-radius: var(--sectionBorderRadius);
  width: var(--defaltBoxSizeW);
  height: var(--defaltBoxSizeV);
}

/* .flip-card:hover .info-cards{

} */



.topics {
  width: var(--defaltBoxSizeW);
  height: var(--defaltBoxSizeV);
  flex-direction: column;
  display: flex;
  align-items: center;

  cursor: pointer;

  border-radius: 50px;
  background: var(--color2);
  box-shadow:  8px 8px 42px #666666,
               -8px -8px 42px var(--color5);
}

.topics img {
  width: var(--defaltBoxSizeW);
  height: var(--defaltBoxSizeV);
  flex-direction: column;
  display: flex;
  align-items: center;

  border-radius: 50px;
}

.topics-section:hover .topics{
  transform: rotatey(180deg);
  transition:200ms;
  background-color: #0fed16;
}







<section class="topics">
  <div class="flip-card">
      <a href="" target="_blank" rel="noopener noreferrer">
          <div class="flip-card-inner">
              <div class="flip-card-front">
                  <img src="./assets/"/>
              </div>
              
              <div class="flip-card-back"> 
                  <img src="./assets/"/>
                  <h1>Item</h1>
                  <h3>* Descrição *</h3>
              </div>
          </div>
      </a>    
  </div>
</section>



const typedTextSpan = document.querySelector(".typed-text");
const cursorSpan = document.querySelector(".cursor");

const textArray = ["<-- Para visualizar informações adicionais, mantenha pressionado o card desejado por alguns instantes -->"];
const typingDelay = 50;
const erasingDelay = 5;
const newTextDelay = 2000; // Delay between current and next text
let textArrayIndex = 0;
let charIndex = 0;

function type() {
  if (charIndex < textArray[textArrayIndex].length) {
    if(!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
    typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
    charIndex++;
    setTimeout(type, typingDelay);
  } 
  else {
    cursorSpan.classList.remove("typing");
  	setTimeout(erase, newTextDelay);
  }
}

function erase() {
	if (charIndex > 0) {
    if(!cursorSpan.classList.contains("typing")) cursorSpan.classList.add("typing");
    typedTextSpan.textContent = textArray[textArrayIndex].substring(0, charIndex-1);
    charIndex--;
    setTimeout(erase, erasingDelay);
  } 
  else {
    cursorSpan.classList.remove("typing");
    textArrayIndex++;
    if(textArrayIndex>=textArray.length) textArrayIndex=0;
    setTimeout(type, typingDelay + 1100);
  }
}

document.addEventListener("DOMContentLoaded", function() { // On DOM Load initiate the effect
  if(textArray.length) setTimeout(type, newTextDelay + 250);
});


